{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TabBarIcon = function (_React$Component) {\n  _inherits(TabBarIcon, _React$Component);\n\n  var _super = _createSuper(TabBarIcon);\n\n  function TabBarIcon() {\n    _classCallCheck(this, TabBarIcon);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TabBarIcon, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          route = _this$props.route,\n          activeOpacity = _this$props.activeOpacity,\n          inactiveOpacity = _this$props.inactiveOpacity,\n          activeTintColor = _this$props.activeTintColor,\n          inactiveTintColor = _this$props.inactiveTintColor,\n          renderIcon = _this$props.renderIcon,\n          horizontal = _this$props.horizontal,\n          style = _this$props.style;\n      return _jsxs(View, {\n        style: style,\n        children: [_jsx(Animated.View, {\n          style: [styles.icon, {\n            opacity: activeOpacity\n          }],\n          children: renderIcon({\n            route: route,\n            focused: true,\n            horizontal: horizontal,\n            tintColor: activeTintColor\n          })\n        }), _jsx(Animated.View, {\n          style: [styles.icon, {\n            opacity: inactiveOpacity\n          }],\n          children: renderIcon({\n            route: route,\n            focused: false,\n            horizontal: horizontal,\n            tintColor: inactiveTintColor\n          })\n        })]\n      });\n    }\n  }]);\n\n  return TabBarIcon;\n}(React.Component);\n\nexport { TabBarIcon as default };\nvar styles = StyleSheet.create({\n  icon: {\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    minWidth: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/Dell/Desktop/REACT/ThirdTest/secondTest/node_modules/react-navigation-tabs/dist/views/CrossFadeIcon.js"],"names":["React","TabBarIcon","props","route","activeOpacity","inactiveOpacity","activeTintColor","inactiveTintColor","renderIcon","horizontal","style","styles","icon","opacity","focused","tintColor","Component","StyleSheet","create","position","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;IAGqBC,U;;;;;;;;;;;;;WACnB,kBAAS;AACP,wBASI,KAAKC,KATT;AAAA,UACEC,KADF,eACEA,KADF;AAAA,UAEEC,aAFF,eAEEA,aAFF;AAAA,UAGEC,eAHF,eAGEA,eAHF;AAAA,UAIEC,eAJF,eAIEA,eAJF;AAAA,UAKEC,iBALF,eAKEA,iBALF;AAAA,UAMEC,UANF,eAMEA,UANF;AAAA,UAOEC,UAPF,eAOEA,UAPF;AAAA,UAQEC,KARF,eAQEA,KARF;AAaA,aAAO,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,KAAb;AAAA,mBACH,KAAC,QAAD,CAAU,IAAV;AAAe,UAAA,KAAK,EAAE,CAACC,MAAM,CAACC,IAAR,EAAc;AAAEC,YAAAA,OAAO,EAAET;AAAX,WAAd,CAAtB;AAAA,oBACGI,UAAU,CAAC;AACZL,YAAAA,KAAK,EAALA,KADY;AAEZW,YAAAA,OAAO,EAAE,IAFG;AAGZL,YAAAA,UAAU,EAAVA,UAHY;AAIZM,YAAAA,SAAS,EAAET;AAJC,WAAD;AADb,UADG,EASH,KAAC,QAAD,CAAU,IAAV;AAAe,UAAA,KAAK,EAAE,CAACK,MAAM,CAACC,IAAR,EAAc;AAAEC,YAAAA,OAAO,EAAER;AAAX,WAAd,CAAtB;AAAA,oBACGG,UAAU,CAAC;AACZL,YAAAA,KAAK,EAALA,KADY;AAEZW,YAAAA,OAAO,EAAE,KAFG;AAGZL,YAAAA,UAAU,EAAVA,UAHY;AAIZM,YAAAA,SAAS,EAAER;AAJC,WAAD;AADb,UATG;AAAA,QAAP;AAkBD;;;;EAjCqCP,KAAK,CAACgB,S;;SAAzBf,U;AAoCrB,IAAMU,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,IAAI,EAAE;AAIJO,IAAAA,QAAQ,EAAE,UAJN;AAKJC,IAAAA,SAAS,EAAE,QALP;AAMJC,IAAAA,UAAU,EAAE,QANR;AAOJC,IAAAA,cAAc,EAAE,QAPZ;AAQJC,IAAAA,MAAM,EAAE,MARJ;AASJC,IAAAA,KAAK,EAAE,MATH;AAWJC,IAAAA,QAAQ,EAAE;AAXN;AADyB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\n\nexport default class TabBarIcon extends React.Component {\n  render() {\n    const {\n      route,\n      activeOpacity,\n      inactiveOpacity,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      horizontal,\n      style\n    } = this.props;\n\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them.\n    return <View style={style}>\n        <Animated.View style={[styles.icon, { opacity: activeOpacity }]}>\n          {renderIcon({\n          route,\n          focused: true,\n          horizontal,\n          tintColor: activeTintColor\n        })}\n        </Animated.View>\n        <Animated.View style={[styles.icon, { opacity: inactiveOpacity }]}>\n          {renderIcon({\n          route,\n          focused: false,\n          horizontal,\n          tintColor: inactiveTintColor\n        })}\n        </Animated.View>\n      </View>;\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25\n  }\n});"]},"metadata":{},"sourceType":"module"}
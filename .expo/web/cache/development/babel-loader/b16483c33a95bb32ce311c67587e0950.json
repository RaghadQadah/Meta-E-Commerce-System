{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport LockIcon from \"@expo/vector-icons/Fontisto\";\nimport firebase from \"firebase/compat/app\";\nimport IconEmail from \"@expo/vector-icons/Zocial\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport * as Facebook from 'expo-facebook';\nimport * as Google from 'expo-google-app-auth';\nimport * as GoogleSignIn from 'expo-google-sign-in';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignInScreen = function (_React$Component) {\n  _inherits(SignInScreen, _React$Component);\n\n  var _super = _createSuper(SignInScreen);\n\n  function SignInScreen() {\n    var _this;\n\n    _classCallCheck(this, SignInScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: '',\n      password: '',\n      errorMessage: '',\n      loading: false,\n      displayName: '',\n      photoURL: '',\n      familyName: '',\n      givenName: ''\n    };\n\n    _this.isUserEqual = function (googleUser, firebaseUser) {\n      if (firebaseUser) {\n        var providerData = firebaseUser.providerData;\n\n        for (var i = 0; i < providerData.length; i++) {\n          if (providerData[i].providerId === firebase.auth.GoogleAuthProvider.PROVIDER_ID && providerData[i].uid === googleUser.getBasicProfile().getId()) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    };\n\n    _this.onSignIn = function (googleUser) {\n      console.log('Google Auth Response', googleUser);\n      var unsubscribe = firebase.auth().onAuthStateChanged(function (firebaseUser) {\n        unsubscribe();\n\n        if (!this.isUserEqual(googleUser, firebaseUser)) {\n          var credential = firebase.auth.GoogleAuthProvider.credential(googleUser.idToken, googleUser.accessToken);\n          firebase.auth().signInAndRetrieveDataWithCredential(credential).then(function (result) {\n            console.log(\"user sign in\");\n            firebase.database().ref('/users' + result.user.uid).set({\n              gmail: result.user.email,\n              profile_picture: result.additionalUserInfo.profile.profile_picture,\n              locale: result.additionalUserInfo.profile_picture.locale,\n              first_name: result.additionalUserInfo.given_name,\n              last_name: result.additionalUserInfo.first_name\n            }).then(function (snapshot) {});\n          }).catch(function (error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            var email = error.email;\n            var credential = error.credential;\n          });\n        } else {\n          console.log('User already signed-in Firebase.');\n        }\n      }.bind(_assertThisInitialized(_this)));\n    };\n\n    _this.signInWithGoogleAsync = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Google.logInAsync({\n                behavior: 'web',\n                androidClientId: '731109863491-m7pnmrb7ml2ses9vu3t3nsfkg3spgm9h.apps.googleusercontent.com',\n                webClientId: '731109863491-b5981s6u228m4f4t8l1lliceqstgahkq.apps.googleusercontent.com',\n                iosClientId: '731109863491-77g059lagdgbkmpoph4497904en22u2o.apps.googleusercontent.com',\n                scopes: ['profile', 'email']\n              }));\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.type === 'success')) {\n                _context.next = 9;\n                break;\n              }\n\n              _this.onSignIn(result);\n\n              return _context.abrupt(\"return\", result.accessToken);\n\n            case 9:\n              return _context.abrupt(\"return\", {\n                cancelled: true\n              });\n\n            case 10:\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", {\n                error: true\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 12]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(SignInScreen, [{\n    key: \"onLoginSuccess\",\n    value: function onLoginSuccess() {\n      this.props.navigation.navigate('App');\n    }\n  }, {\n    key: \"onLoginFailure\",\n    value: function onLoginFailure(errorMessage) {\n      this.setState({\n        error: errorMessage,\n        loading: false\n      });\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      if (this.state.loading) {\n        return _jsx(View, {\n          children: _jsx(ActivityIndicator, {\n            size: 'large'\n          })\n        });\n      }\n    }\n  }, {\n    key: \"signInWithEmail\",\n    value: function signInWithEmail() {\n      var _this2 = this;\n\n      var result;\n      return _regeneratorRuntime.async(function signInWithEmail$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(this.onLoginSuccess.bind(this)).catch(function (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n\n                if (errorCode == 'auth/weak-password') {\n                  _this2.onLoginFailure.bind(_this2)('Weak Password!');\n                } else {\n                  _this2.onLoginFailure.bind(_this2)(errorMessage);\n                }\n              }));\n\n            case 2:\n              result = _context2.sent;\n              console.log(\"rrrrrrrXXXXXXXXXXXXXXXXXXXXx\", this.state.displayName);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsx(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          Keyboard.dismiss();\n        },\n        children: _jsx(SafeAreaView, {\n          style: {\n            flex: 1\n          },\n          children: _jsxs(KeyboardAvoidingView, {\n            style: styles.container,\n            behavior: \"padding\",\n            children: [_jsx(Image, {\n              style: styles.logo,\n              source: require(\"../images/logo1.png\")\n            }), _jsx(Text, {\n              style: {\n                fontSize: 32,\n                fontWeight: \"700\",\n                color: \"green\",\n                padding: 15\n              },\n              children: \"Login\"\n            }), _jsxs(View, {\n              style: styles.form,\n              children: [_jsxs(View, {\n                children: [_jsx(IconEmail, {\n                  name: 'email',\n                  size: 21,\n                  color: '#2E922E',\n                  style: styles.inputIcon\n                }), _jsx(TextInput, {\n                  onChangeText: function onChangeText(email) {\n                    return _this3.setState({\n                      email: email\n                    });\n                  },\n                  value: this.state.email,\n                  style: styles.input,\n                  returnKeyType: \"next\",\n                  placeholder: 'Email',\n                  placeholderTextColor: '#B1B1B1',\n                  keyboardType: \"email-address\",\n                  textContentType: \"emailAddress\"\n                })]\n              }), _jsxs(View, {\n                children: [_jsx(LockIcon, {\n                  name: 'locked',\n                  size: 21,\n                  color: '#2E922E',\n                  style: styles.inputIcon\n                }), _jsx(TextInput, {\n                  style: styles.input,\n                  placeholder: \"Password\",\n                  placeholderTextColor: \"#B1B1B1\",\n                  returnKeyType: \"done\",\n                  textContentType: \"newPassword\",\n                  secureTextEntry: true,\n                  value: this.state.password,\n                  onChangeText: function onChangeText(password) {\n                    return _this3.setState({\n                      password: password\n                    });\n                  }\n                })]\n              })]\n            }), this.renderLoading(), _jsx(Text, {\n              style: {\n                fontSize: 18,\n                textAlign: \"center\",\n                color: \"red\",\n                width: \"80%\"\n              },\n              children: this.state.error\n            }), _jsx(Text, {\n              style: {\n                fontSize: 18,\n                color: \"green\",\n                textAlign: 'left',\n                fontWeight: 'bold'\n              },\n              children: \"Forgot Password?\"\n            }), _jsx(TouchableOpacity, {\n              activeOpacity: .5,\n              style: styles.btnLogin,\n              onPress: function onPress() {\n                return _this3.signInWithEmail();\n              },\n              children: _jsx(Text, {\n                style: styles.textsubmit,\n                children: \"Sign In\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: {\n                marginTop: 10\n              },\n              onPress: function onPress() {\n                return _this3.signInWithGoogleAsync();\n              },\n              children: _jsxs(View, {\n                style: styles.googleButton,\n                children: [_jsx(Icon, {\n                  name: \"logo-google\",\n                  size: 23,\n                  color: '#2E922E'\n                }), _jsx(Text, {\n                  style: {\n                    letterSpacing: 0.5,\n                    fontSize: 16,\n                    color: '#707070'\n                  },\n                  children: \"Continue with Google\"\n                })]\n              })\n            }), _jsxs(View, {\n              style: {\n                marginTop: 15,\n                flexDirection: 'row'\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontWeight: \"200\",\n                  fontSize: 17,\n                  textAlign: \"center\"\n                },\n                children: \"Don't have an account?\"\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  _this3.props.navigation.navigate('SignUp');\n                },\n                children: _jsx(Text, {\n                  style: {\n                    fontWeight: \"200\",\n                    fontSize: 17,\n                    textAlign: \"center\",\n                    fontWeight: 'bold',\n                    color: '#2E922E'\n                  },\n                  children: \" Register Now \"\n                })\n              })]\n            })]\n          })\n        })\n      });\n    }\n  }]);\n\n  return SignInScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"86%\",\n    marginTop: 15\n  },\n  logo: {\n    marginTop: 100,\n    height: 100,\n    width: 100\n  },\n  input: {\n    fontSize: 20,\n    borderColor: \"#707070\",\n    borderBottomWidth: 1,\n    paddingBottom: 1.5,\n    marginTop: 25.5,\n    borderRadius: 45,\n    fontWeight: 'bold',\n    color: 'black',\n    paddingLeft: 48,\n    marginHorizontal: 25\n  },\n  button: {\n    backgroundColor: \"#3A559F\",\n    height: 44,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 22\n  },\n  googleButton: {\n    backgroundColor: \"#FFFFFF\",\n    height: 44,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 22,\n    borderWidth: 1,\n    borderColor: \"#707070\",\n    width: 320\n  },\n  pass: {\n    height: 20,\n    width: 20\n  },\n  backgroundContainer: {\n    flex: 1,\n    width: null,\n    height: null,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  logoLogin: {\n    width: 120,\n    height: 120\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 50\n  },\n  logoText: {\n    color: 'white',\n    fontSize: 26,\n    fontWeight: '500',\n    marginTop: 10,\n    opacity: 0.8\n  },\n  inputUsername: {\n    width: 200,\n    height: 45,\n    borderRadius: 45,\n    fontSize: 16,\n    fontWeight: 'bold',\n    backgroundColor: '#e3e3e3',\n    color: 'black',\n    paddingLeft: 48,\n    marginTop: 15,\n    marginHorizontal: 25,\n    opacity: 0.5\n  },\n  inputIcon: {\n    position: 'absolute',\n    top: 21,\n    left: 43\n  },\n  btnEye: {\n    position: 'absolute',\n    top: 24,\n    right: 43\n  },\n  btnLogin: {\n    width: 320,\n    height: 45,\n    borderRadius: 45,\n    backgroundColor: '#2E922E',\n    justifyContent: 'center',\n    marginTop: 30\n  },\n  textsubmit: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    letterSpacing: 0.5,\n    fontSize: 16\n  },\n  textLogin: {\n    color: 'white',\n    fontSize: 26,\n    fontWeight: 'bold',\n    marginTop: 30\n  }\n});\nexport default SignInScreen;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/NewReact/E-COM/Meta-E-Commerce-System-with-Payment-and-Delivery/screens/SignInScreen.js"],"names":["React","Icon","LockIcon","firebase","IconEmail","Facebook","Google","GoogleSignIn","SignInScreen","state","email","password","errorMessage","loading","displayName","photoURL","familyName","givenName","isUserEqual","googleUser","firebaseUser","providerData","i","length","providerId","auth","GoogleAuthProvider","PROVIDER_ID","uid","getBasicProfile","getId","onSignIn","console","log","unsubscribe","onAuthStateChanged","credential","idToken","accessToken","signInAndRetrieveDataWithCredential","then","result","database","ref","user","set","gmail","profile_picture","additionalUserInfo","profile","locale","first_name","given_name","last_name","snapshot","catch","error","errorCode","code","message","bind","signInWithGoogleAsync","logInAsync","behavior","androidClientId","webClientId","iosClientId","scopes","type","cancelled","props","navigation","navigate","setState","signInWithEmailAndPassword","onLoginSuccess","onLoginFailure","Keyboard","dismiss","flex","styles","container","logo","require","fontSize","fontWeight","color","padding","form","inputIcon","input","renderLoading","textAlign","width","btnLogin","signInWithEmail","textsubmit","marginTop","googleButton","letterSpacing","flexDirection","Component","StyleSheet","create","alignItems","height","borderColor","borderBottomWidth","paddingBottom","borderRadius","paddingLeft","marginHorizontal","button","backgroundColor","justifyContent","borderWidth","pass","backgroundContainer","logoLogin","logoContainer","marginBottom","logoText","opacity","inputUsername","position","top","left","btnEye","right","textLogin"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  ActivityIndicator,\r\n  TouchableWithoutFeedback,\r\n  Keyboard, Image\r\n} from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/Ionicons'\r\nimport LockIcon from 'react-native-vector-icons/Fontisto'\r\nimport firebase from \"firebase/compat/app\"\r\nimport IconEmail from 'react-native-vector-icons/Zocial'\r\nimport \"firebase/compat/auth\"\r\nimport \"firebase/compat/firestore\"\r\nimport * as Facebook from 'expo-facebook'\r\nimport * as Google from 'expo-google-app-auth';\r\nimport * as GoogleSignIn from 'expo-google-sign-in';\r\n\r\n\r\n\r\nclass SignInScreen extends React.Component {\r\n  state = { email: '', password: '', errorMessage: '', loading: false , displayName:'',photoURL:'', \r\n  familyName: '',givenName: ''};\r\n \r\n  onLoginSuccess() {\r\n    this.props.navigation.navigate('App');\r\n  }\r\n  onLoginFailure(errorMessage) {\r\n    this.setState({ error: errorMessage, loading: false });\r\n  }\r\n  renderLoading() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <View>\r\n          <ActivityIndicator size={'large'} />\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n  async signInWithEmail() {\r\n    const result = await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(this.onLoginSuccess.bind(this))\r\n      .catch(error => {\r\n        let errorCode = error.code;\r\n        let errorMessage = error.message;\r\n        if (errorCode == 'auth/weak-password') {\r\n          this.onLoginFailure.bind(this)('Weak Password!');\r\n        } else {\r\n          this.onLoginFailure.bind(this)(errorMessage);\r\n        }\r\n      });\r\n      console.log(\"rrrrrrrXXXXXXXXXXXXXXXXXXXXx\",this.state.displayName)\r\n  }\r\n\r\n  // async signInWithFacebook() {\r\n  //   try {\r\n  //     await Facebook.initializeAsync({\r\n  //       appId: '337956678166688',\r\n  //     });\r\n  //     const { type, token, expirationDate, permissions, declinedPermissions } =\r\n  //       await Facebook.logInWithReadPermissionsAsync({\r\n  //         permissions: ['public_profile'],\r\n  //       });\r\n  //     if (type === 'success') {\r\n  //       // Get the user's name using Facebook's Graph API\r\n  //     const response = await fetch(`https://graph.facebook.com/me?access_token=${token}`);\r\n  //    console.log('Logged in!', `Hi ${(await response.json()).name}!`);\r\n  //       // await firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\r\n  //       const credential = firebase.auth.FacebookAuthProvider.credential(token);\r\n  //       const facebookProfileData = await firebase.auth().signInWithCredential(credential);\r\n  //     this.onLoginSuccess.bind(this);\r\n  //     } else {\r\n  //       // type === 'cancel'\r\n  //     }\r\n  //   } catch ({ message }) {\r\n  //     alert(`Facebook Login Error: ${message}`);\r\n  //     console.log(message);\r\n  //   }\r\n  // }\r\n\r\n\r\n  isUserEqual = (googleUser, firebaseUser) => {\r\n    if (firebaseUser) {\r\n      var providerData = firebaseUser.providerData;\r\n      for (var i = 0; i < providerData.length; i++) {\r\n        if (providerData[i].providerId === firebase.auth.GoogleAuthProvider.PROVIDER_ID &&\r\n          providerData[i].uid === googleUser.getBasicProfile().getId()) {\r\n          // We don't need to reauth the Firebase connection.\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onSignIn = (googleUser) => {\r\n    console.log('Google Auth Response', googleUser);\r\n    // We need to register an Observer on Firebase Auth to make sure auth is initialized.\r\n    var unsubscribe = firebase.auth().onAuthStateChanged(function (firebaseUser) {\r\n      unsubscribe();\r\n      // Check if we are already signed-in Firebase with the correct user.\r\n      if (!this.isUserEqual(googleUser, firebaseUser)) {\r\n        // Build Firebase credential with the Google ID token.\r\n        var credential = firebase.auth.GoogleAuthProvider.credential(\r\n          googleUser.idToken,\r\n          googleUser.accessToken);\r\n        // Sign in with credential from the Google user.\r\n        firebase.auth().signInAndRetrieveDataWithCredential(credential).then(function (result) {\r\n\r\n          console.log(\"user sign in\");\r\n          firebase\r\n            .database()\r\n            .ref('/users' + result.user.uid)\r\n            .set({\r\n              gmail: result.user.email,\r\n              profile_picture: result.additionalUserInfo.profile.profile_picture,\r\n              locale: result.additionalUserInfo.profile_picture.locale,\r\n              first_name: result.additionalUserInfo.given_name,\r\n              last_name: result.additionalUserInfo.first_name\r\n            })\r\n            .then(function (snapshot) {\r\n\r\n            });\r\n        }).catch(function (error) {\r\n          // Handle Errors here.\r\n          var errorCode = error.code;\r\n          var errorMessage = error.message;\r\n          // The email of the user's account used.\r\n          var email = error.email;\r\n          // The firebase.auth.AuthCredential type that was used.\r\n          var credential = error.credential;\r\n          // ...\r\n        });\r\n      } else {\r\n        console.log('User already signed-in Firebase.');\r\n      }\r\n    }.bind(this));\r\n  }\r\n\r\n  signInWithGoogleAsync = async () => {\r\n    try {\r\n      const result = await Google.logInAsync({\r\n        behavior: 'web',\r\n        androidClientId: '731109863491-m7pnmrb7ml2ses9vu3t3nsfkg3spgm9h.apps.googleusercontent.com',\r\n        webClientId: '731109863491-b5981s6u228m4f4t8l1lliceqstgahkq.apps.googleusercontent.com',\r\n        iosClientId: '731109863491-77g059lagdgbkmpoph4497904en22u2o.apps.googleusercontent.com', //enter ios client id\r\n        scopes: ['profile', 'email']\r\n      });\r\n\r\n      if (result.type === 'success') {\r\n        this.onSignIn(result);\r\n      //  console.log(\"xxxxxxxxxxx\",result)\r\n        return result.accessToken;\r\n      } else {\r\n        return { cancelled: true };\r\n      }\r\n    } catch (e) {\r\n      return { error: true };\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <TouchableWithoutFeedback\r\n        onPress={() => {\r\n          Keyboard.dismiss();\r\n        }}\r\n        \r\n      >\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n          <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\r\n            <Image style={styles.logo} source={require('../images/logo1.png')} />\r\n            <Text style={{ fontSize: 32, fontWeight: \"700\", color: \"green\", padding: 15 }}>\r\n\r\n              Login\r\n            </Text>\r\n            <View style={styles.form}>\r\n              {/*<Icon name={'md-person'} size={28} color={'black'}\r\n            style={styles.inputIcon}/>\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Email\"\r\n                placeholderTextColor=\"#B1B1B1\"\r\n                returnKeyType=\"next\"\r\n                keyboardType=\"email-address\"\r\n                textContentType=\"emailAddress\"\r\n                value={this.state.email}\r\n                onChangeText={email => this.setState({ email })}\r\n              /> */}\r\n\r\n\r\n\r\n\r\n              <View>\r\n                <IconEmail name={'email'} size={21} color={'#2E922E'}\r\n                  style={styles.inputIcon} />\r\n                <TextInput\r\n                  onChangeText={email => this.setState({ email })}\r\n                  value={this.state.email}\r\n                  style={styles.input}\r\n                  returnKeyType=\"next\"\r\n                  placeholder={'Email'}\r\n                  placeholderTextColor={'#B1B1B1'}\r\n                  keyboardType=\"email-address\"\r\n                  textContentType=\"emailAddress\"\r\n                />\r\n              </View>\r\n              <View>\r\n                <LockIcon name={'locked'} size={21} color={'#2E922E'}\r\n                  style={styles.inputIcon} />\r\n                <TextInput\r\n                  style={styles.input}\r\n                  placeholder=\"Password\"\r\n                  placeholderTextColor=\"#B1B1B1\"\r\n                  returnKeyType=\"done\"\r\n                  textContentType=\"newPassword\"\r\n                  secureTextEntry={true}\r\n                  value={this.state.password}\r\n                  onChangeText={password => this.setState({ password })}\r\n                />\r\n\r\n              </View>\r\n            </View>\r\n            {this.renderLoading()}\r\n            <Text\r\n              style={{\r\n                fontSize: 18,\r\n                textAlign: \"center\",\r\n                color: \"red\",\r\n                width: \"80%\"\r\n              }}\r\n            >\r\n              {this.state.error}\r\n            </Text>\r\n\r\n            <Text style={{ fontSize: 18, color: \"green\", textAlign: 'left',fontWeight: 'bold'}}>\r\n              Forgot Password?</Text>\r\n            <TouchableOpacity activeOpacity={.5} style={styles.btnLogin}\r\n              // style={{ width: '20%', marginTop: 20  }}\r\n              onPress={() => this.signInWithEmail()}>\r\n              <Text style={styles.textsubmit}>Sign In</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n              style={{marginTop: 10 }}\r\n              onPress={() => this.signInWithGoogleAsync()}>\r\n              <View style={styles.googleButton}>\r\n                <Icon name=\"logo-google\" size={23} color={'#2E922E'}  />\r\n                <Text\r\n                  style={{\r\n                    letterSpacing: 0.5,\r\n                    fontSize: 16,\r\n                    color: '#707070'\r\n                  }}\r\n                >\r\n                  Continue with Google\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n\r\n            <View style={{ marginTop: 15, flexDirection: 'row' }}>\r\n              <Text style={{ fontWeight: \"200\", fontSize: 17, textAlign: \"center\" }}>Don't have an account?</Text>\r\n              <TouchableOpacity onPress={() => { this.props.navigation.navigate('SignUp') }}>\r\n                <Text style={{ fontWeight: \"200\", fontSize: 17, textAlign: \"center\", fontWeight: 'bold', color: '#2E922E' }}> Register Now </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n          </KeyboardAvoidingView>\r\n        </SafeAreaView>\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  form: {\r\n    width: \"86%\",\r\n    marginTop: 15\r\n  },\r\n  logo: {\r\n    marginTop: 100,\r\n    height: 100,\r\n    width: 100\r\n  },\r\n  input: {\r\n    fontSize: 20,\r\n    borderColor: \"#707070\",\r\n    borderBottomWidth: 1,\r\n    paddingBottom: 1.5,\r\n    marginTop: 25.5,\r\n    borderRadius: 45,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    paddingLeft: 48,\r\n    marginHorizontal: 25,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#3A559F\",\r\n    height: 44,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 22\r\n  },\r\n  googleButton: {\r\n\r\n    backgroundColor: \"#FFFFFF\",\r\n    height: 44,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 22,\r\n    borderWidth: 1,\r\n    borderColor: \"#707070\",\r\n    width: 320,\r\n  },\r\n  pass: {\r\n    height: 20,\r\n    width: 20\r\n  },\r\n  backgroundContainer: {\r\n    flex: 1,\r\n    width: null,\r\n    height: null,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  logoLogin: {\r\n    width: 120,\r\n    height: 120,\r\n  },\r\n  logoContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: 50\r\n  },\r\n  logoText: {\r\n    color: 'white',\r\n    fontSize: 26,\r\n    fontWeight: '500',\r\n    marginTop: 10,\r\n    opacity: 0.8\r\n  },\r\n  inputUsername: {\r\n    width: 200,\r\n    height: 45,\r\n    borderRadius: 45,\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#e3e3e3',\r\n    color: 'black',\r\n    paddingLeft: 48,\r\n    marginTop: 15,\r\n    marginHorizontal: 25,\r\n    opacity: 0.5\r\n  },\r\n  inputIcon: {\r\n    position: 'absolute',\r\n    top: 21,\r\n    left: 43\r\n  },\r\n  btnEye: {\r\n    position: 'absolute',\r\n    top: 24,\r\n    right: 43\r\n  },\r\n  btnLogin: {\r\n    width: 320,\r\n    height: 45,\r\n    borderRadius: 45,\r\n    backgroundColor: '#2E922E',\r\n    justifyContent: 'center',\r\n    marginTop: 30,\r\n  },\r\n  textsubmit: {\r\n    color: 'white',\r\n    // fontSize: 18,\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    letterSpacing: 0.5,\r\n    fontSize: 16,\r\n    // color: '#707070'\r\n  },\r\n  textLogin: {\r\n    color: 'white',\r\n    fontSize: 26,\r\n    fontWeight: 'bold',\r\n    marginTop: 30,\r\n  }\r\n});\r\nexport default SignInScreen;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport { ScreenContainer } from 'react-native-screens';\nimport createTabNavigator from \"../utils/createTabNavigator\";\nimport BottomTabBar from \"../views/BottomTabBar\";\nimport ResourceSavingScene from \"../views/ResourceSavingScene\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TabNavigationView = function (_React$PureComponent) {\n  _inherits(TabNavigationView, _React$PureComponent);\n\n  var _super = _createSuper(TabNavigationView);\n\n  function TabNavigationView() {\n    var _this;\n\n    _classCallCheck(this, TabNavigationView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      loaded: [_this.props.navigation.state.index]\n    };\n\n    _this._renderTabBar = function () {\n      var _this$props = _this.props,\n          _this$props$tabBarCom = _this$props.tabBarComponent,\n          TabBarComponent = _this$props$tabBarCom === void 0 ? BottomTabBar : _this$props$tabBarCom,\n          tabBarOptions = _this$props.tabBarOptions,\n          navigation = _this$props.navigation,\n          screenProps = _this$props.screenProps,\n          getLabelText = _this$props.getLabelText,\n          getAccessibilityLabel = _this$props.getAccessibilityLabel,\n          getButtonComponent = _this$props.getButtonComponent,\n          getTestID = _this$props.getTestID,\n          renderIcon = _this$props.renderIcon,\n          onTabPress = _this$props.onTabPress,\n          onTabLongPress = _this$props.onTabLongPress;\n      var descriptors = _this.props.descriptors;\n      var state = _this.props.navigation.state;\n      var route = state.routes[state.index];\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n\n      if (options.tabBarVisible === false) {\n        return null;\n      }\n\n      return _jsx(TabBarComponent, _objectSpread(_objectSpread({}, tabBarOptions), {}, {\n        jumpTo: _this._jumpTo,\n        navigation: navigation,\n        screenProps: screenProps,\n        onTabPress: onTabPress,\n        onTabLongPress: onTabLongPress,\n        getLabelText: getLabelText,\n        getButtonComponent: getButtonComponent,\n        getAccessibilityLabel: getAccessibilityLabel,\n        getTestID: getTestID,\n        renderIcon: renderIcon\n      }));\n    };\n\n    _this._jumpTo = function (key) {\n      var _this$props2 = _this.props,\n          navigation = _this$props2.navigation,\n          onIndexChange = _this$props2.onIndexChange;\n      var index = navigation.state.routes.findIndex(function (route) {\n        return route.key === key;\n      });\n      onIndexChange(index);\n    };\n\n    return _this;\n  }\n\n  _createClass(TabNavigationView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          navigation = _this$props3.navigation,\n          renderScene = _this$props3.renderScene,\n          lazy = _this$props3.lazy;\n      var routes = navigation.state.routes;\n      var loaded = this.state.loaded;\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(ScreenContainer, {\n          style: styles.pages,\n          children: routes.map(function (route, index) {\n            if (lazy && !loaded.includes(index)) {\n              return null;\n            }\n\n            var isFocused = navigation.state.index === index;\n            return _jsx(ResourceSavingScene, {\n              style: StyleSheet.absoluteFill,\n              isVisible: isFocused,\n              children: renderScene({\n                route: route\n              })\n            }, route.key);\n          })\n        }), this._renderTabBar()]\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var index = nextProps.navigation.state.index;\n      return {\n        loaded: prevState.loaded.includes(index) ? prevState.loaded : [].concat(_toConsumableArray(prevState.loaded), [index])\n      };\n    }\n  }]);\n\n  return TabNavigationView;\n}(React.PureComponent);\n\nTabNavigationView.defaultProps = {\n  lazy: true\n};\npolyfill(TabNavigationView);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  pages: {\n    flex: 1\n  }\n});\nexport default createTabNavigator(TabNavigationView);","map":{"version":3,"sources":["C:/Users/Dell/Desktop/REACT/ThirdTest/secondTest/node_modules/react-navigation-tabs/dist/navigators/createBottomTabNavigator.js"],"names":["React","polyfill","ScreenContainer","createTabNavigator","BottomTabBar","ResourceSavingScene","TabNavigationView","state","loaded","props","navigation","index","_renderTabBar","tabBarComponent","TabBarComponent","tabBarOptions","screenProps","getLabelText","getAccessibilityLabel","getButtonComponent","getTestID","renderIcon","onTabPress","onTabLongPress","descriptors","route","routes","descriptor","key","options","tabBarVisible","_jumpTo","onIndexChange","findIndex","renderScene","lazy","styles","container","pages","map","includes","isFocused","StyleSheet","absoluteFill","nextProps","prevState","PureComponent","defaultProps","create","flex","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { polyfill } from 'react-lifecycles-compat';\n\n// eslint-disable-next-line import/no-unresolved\nimport { ScreenContainer } from 'react-native-screens';\n\nimport createTabNavigator from '../utils/createTabNavigator';\nimport BottomTabBar from '../views/BottomTabBar';\nimport ResourceSavingScene from '../views/ResourceSavingScene';\n\nclass TabNavigationView extends React.PureComponent {\n  static defaultProps = {\n    lazy: true\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { index } = nextProps.navigation.state;\n\n    return {\n      // Set the current tab to be loaded if it was not loaded before\n      loaded: prevState.loaded.includes(index) ? prevState.loaded : [...prevState.loaded, index]\n    };\n  }\n\n  state = {\n    loaded: [this.props.navigation.state.index]\n  };\n\n  _renderTabBar = () => {\n    const {\n      tabBarComponent: TabBarComponent = BottomTabBar,\n      tabBarOptions,\n      navigation,\n      screenProps,\n      getLabelText,\n      getAccessibilityLabel,\n      getButtonComponent,\n      getTestID,\n      renderIcon,\n      onTabPress,\n      onTabLongPress\n    } = this.props;\n\n    const { descriptors } = this.props;\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarVisible === false) {\n      return null;\n    }\n\n    return <TabBarComponent {...tabBarOptions} jumpTo={this._jumpTo} navigation={navigation} screenProps={screenProps} onTabPress={onTabPress} onTabLongPress={onTabLongPress} getLabelText={getLabelText} getButtonComponent={getButtonComponent} getAccessibilityLabel={getAccessibilityLabel} getTestID={getTestID} renderIcon={renderIcon} />;\n  };\n\n  _jumpTo = key => {\n    const { navigation, onIndexChange } = this.props;\n\n    const index = navigation.state.routes.findIndex(route => route.key === key);\n\n    onIndexChange(index);\n  };\n\n  render() {\n    const { navigation, renderScene, lazy } = this.props;\n    const { routes } = navigation.state;\n    const { loaded } = this.state;\n\n    return <View style={styles.container}>\n        <ScreenContainer style={styles.pages}>\n          {routes.map((route, index) => {\n          if (lazy && !loaded.includes(index)) {\n            // Don't render a screen if we've never navigated to it\n            return null;\n          }\n\n          const isFocused = navigation.state.index === index;\n\n          return <ResourceSavingScene key={route.key} style={StyleSheet.absoluteFill} isVisible={isFocused}>\n                {renderScene({ route })}\n              </ResourceSavingScene>;\n        })}\n        </ScreenContainer>\n        {this._renderTabBar()}\n      </View>;\n  }\n}\n\npolyfill(TabNavigationView);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  pages: {\n    flex: 1\n  }\n});\n\nexport default createTabNavigator(TabNavigationView);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"navigation\", \"animationEnabled\", \"renderScene\", \"onIndexChange\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport { TabView, PagerPan } from 'react-native-tab-view';\nimport createTabNavigator from \"../utils/createTabNavigator\";\nimport MaterialTopTabBar from \"../views/MaterialTopTabBar\";\nimport ResourceSavingScene from \"../views/ResourceSavingScene\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar MaterialTabView = function (_React$PureComponent) {\n  _inherits(MaterialTabView, _React$PureComponent);\n\n  var _super = _createSuper(MaterialTabView);\n\n  function MaterialTabView() {\n    var _this;\n\n    _classCallCheck(this, MaterialTabView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      index: 0,\n      isSwiping: false,\n      loaded: [_this.props.navigation.state.index],\n      transitioningFromIndex: null\n    };\n\n    _this._renderIcon = function (_ref) {\n      var focused = _ref.focused,\n          route = _ref.route,\n          tintColor = _ref.tintColor;\n      var descriptors = _this.props.descriptors;\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n\n      if (options.tabBarIcon) {\n        return typeof options.tabBarIcon === 'function' ? options.tabBarIcon({\n          tintColor: tintColor,\n          focused: focused\n        }) : options.tabBarIcon;\n      }\n\n      return null;\n    };\n\n    _this._renderTabBar = function (props) {\n      var state = _this.props.navigation.state;\n      var route = state.routes[state.index];\n      var descriptors = _this.props.descriptors;\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n      var tabBarVisible = options.tabBarVisible == null ? true : options.tabBarVisible;\n      var _this$props = _this.props,\n          _this$props$tabBarCom = _this$props.tabBarComponent,\n          TabBarComponent = _this$props$tabBarCom === void 0 ? MaterialTopTabBar : _this$props$tabBarCom,\n          tabBarPosition = _this$props.tabBarPosition,\n          tabBarOptions = _this$props.tabBarOptions;\n\n      if (TabBarComponent === null || !tabBarVisible) {\n        return null;\n      }\n\n      return _jsx(TabBarComponent, _objectSpread(_objectSpread(_objectSpread({}, tabBarOptions), props), {}, {\n        tabBarPosition: tabBarPosition,\n        screenProps: _this.props.screenProps,\n        navigation: _this.props.navigation,\n        getLabelText: _this.props.getLabelText,\n        getAccessibilityLabel: _this.props.getAccessibilityLabel,\n        getTestID: _this.props.getTestID,\n        renderIcon: _this._renderIcon,\n        onTabPress: _this.props.onTabPress,\n        onTabLongPress: _this.props.onTabLongPress\n      }));\n    };\n\n    _this._renderPanPager = function (props) {\n      return _jsx(PagerPan, _objectSpread({}, props));\n    };\n\n    _this._handleAnimationEnd = function () {\n      var lazy = _this.props.lazy;\n\n      if (lazy) {\n        _this.setState({\n          transitioningFromIndex: null,\n          isSwiping: false\n        });\n      }\n    };\n\n    _this._handleSwipeStart = function () {\n      var _this$props2 = _this.props,\n          navigation = _this$props2.navigation,\n          lazy = _this$props2.lazy;\n\n      if (lazy) {\n        _this.setState({\n          isSwiping: true,\n          loaded: _toConsumableArray(new Set([].concat(_toConsumableArray(_this.state.loaded), [Math.max(navigation.state.index - 1, 0), Math.min(navigation.state.index + 1, navigation.state.routes.length - 1)])))\n        });\n      }\n    };\n\n    _this._handleIndexChange = function (index) {\n      var _this$props3 = _this.props,\n          animationEnabled = _this$props3.animationEnabled,\n          navigation = _this$props3.navigation,\n          onIndexChange = _this$props3.onIndexChange,\n          lazy = _this$props3.lazy;\n\n      if (lazy && animationEnabled) {\n        _this.setState({\n          transitioningFromIndex: navigation.state.index || 0\n        });\n      }\n\n      onIndexChange(index);\n    };\n\n    _this._mustBeVisible = function (_ref2) {\n      var index = _ref2.index,\n          focused = _ref2.focused;\n      var _this$props4 = _this.props,\n          animationEnabled = _this$props4.animationEnabled,\n          navigation = _this$props4.navigation;\n      var _this$state = _this.state,\n          isSwiping = _this$state.isSwiping,\n          transitioningFromIndex = _this$state.transitioningFromIndex;\n\n      if (isSwiping) {\n        var isSibling = navigation.state.index === index - 1 || navigation.state.index === index + 1;\n\n        if (isSibling) {\n          return true;\n        }\n      }\n\n      if (animationEnabled && transitioningFromIndex === index) {\n        return true;\n      }\n\n      return focused;\n    };\n\n    _this._renderScene = function (_ref3) {\n      var route = _ref3.route;\n      var _this$props5 = _this.props,\n          renderScene = _this$props5.renderScene,\n          descriptors = _this$props5.descriptors,\n          lazy = _this$props5.lazy,\n          optimizationsEnabled = _this$props5.optimizationsEnabled;\n\n      if (lazy) {\n        var loaded = _this.state.loaded;\n        var routes = _this.props.navigation.state.routes;\n        var index = routes.findIndex(function (_ref4) {\n          var key = _ref4.key;\n          return key === route.key;\n        });\n        var navigation = descriptors[route.key].navigation;\n\n        var mustBeVisible = _this._mustBeVisible({\n          index: index,\n          focused: navigation.isFocused()\n        });\n\n        if (!loaded.includes(index) && !mustBeVisible) {\n          return _jsx(View, {});\n        }\n\n        if (optimizationsEnabled) {\n          return _jsx(ResourceSavingScene, {\n            isVisible: mustBeVisible,\n            children: renderScene({\n              route: route\n            })\n          });\n        }\n      }\n\n      return renderScene({\n        route: route\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MaterialTabView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          navigation = _this$props6.navigation,\n          animationEnabled = _this$props6.animationEnabled,\n          renderScene = _this$props6.renderScene,\n          onIndexChange = _this$props6.onIndexChange,\n          rest = _objectWithoutProperties(_this$props6, _excluded);\n\n      var renderPager = rest.renderPager;\n      var state = this.props.navigation.state;\n      var route = state.routes[state.index];\n      var descriptors = this.props.descriptors;\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n      var swipeEnabled = options.swipeEnabled == null ? this.props.swipeEnabled : options.swipeEnabled;\n\n      if (typeof swipeEnabled === 'function') {\n        swipeEnabled = swipeEnabled(state);\n      }\n\n      if (animationEnabled === false && swipeEnabled === false) {\n        renderPager = this._renderPanPager;\n      }\n\n      return _jsx(TabView, _objectSpread(_objectSpread({}, rest), {}, {\n        navigationState: navigation.state,\n        animationEnabled: animationEnabled,\n        swipeEnabled: swipeEnabled,\n        onAnimationEnd: this._handleAnimationEnd,\n        onIndexChange: this._handleIndexChange,\n        onSwipeStart: this._handleSwipeStart,\n        renderPager: renderPager,\n        renderTabBar: this._renderTabBar,\n        renderScene: this._renderScene\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var index = nextProps.navigation.state.index;\n\n      if (prevState.index === index) {\n        return null;\n      }\n\n      return {\n        loaded: prevState.loaded.includes(index) ? prevState.loaded : [].concat(_toConsumableArray(prevState.loaded), [index]),\n        index: index\n      };\n    }\n  }]);\n\n  return MaterialTabView;\n}(React.PureComponent);\n\nMaterialTabView.defaultProps = {\n  initialLayout: Platform.select({\n    android: {\n      width: 1,\n      height: 0\n    }\n  }),\n  animationEnabled: true,\n  lazy: false,\n  optimizationsEnabled: false\n};\npolyfill(MaterialTabView);\nexport default createTabNavigator(MaterialTabView);","map":{"version":3,"sources":["C:/Users/Dell/Desktop/REACT/secondTest/node_modules/react-navigation-tabs/dist/navigators/createMaterialTopTabNavigator.js"],"names":["React","polyfill","TabView","PagerPan","createTabNavigator","MaterialTopTabBar","ResourceSavingScene","MaterialTabView","state","index","isSwiping","loaded","props","navigation","transitioningFromIndex","_renderIcon","focused","route","tintColor","descriptors","descriptor","key","options","tabBarIcon","_renderTabBar","routes","tabBarVisible","tabBarComponent","TabBarComponent","tabBarPosition","tabBarOptions","screenProps","getLabelText","getAccessibilityLabel","getTestID","onTabPress","onTabLongPress","_renderPanPager","_handleAnimationEnd","lazy","setState","_handleSwipeStart","Set","Math","max","min","length","_handleIndexChange","animationEnabled","onIndexChange","_mustBeVisible","isSibling","_renderScene","renderScene","optimizationsEnabled","findIndex","mustBeVisible","isFocused","includes","rest","renderPager","swipeEnabled","nextProps","prevState","PureComponent","defaultProps","initialLayout","Platform","select","android","width","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, Platform } from 'react-native';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { TabView, PagerPan } from 'react-native-tab-view';\nimport createTabNavigator from '../utils/createTabNavigator';\nimport MaterialTopTabBar from '../views/MaterialTopTabBar';\nimport ResourceSavingScene from '../views/ResourceSavingScene';\n\nclass MaterialTabView extends React.PureComponent {\n  static defaultProps = {\n    // fix for https://github.com/react-native-community/react-native-tab-view/issues/312\n    initialLayout: Platform.select({\n      android: { width: 1, height: 0 }\n    }),\n    animationEnabled: true,\n    lazy: false,\n    optimizationsEnabled: false\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { index } = nextProps.navigation.state;\n\n    if (prevState.index === index) {\n      return null;\n    }\n\n    return {\n      loaded: prevState.loaded.includes(index) ? prevState.loaded : [...prevState.loaded, index],\n      index\n    };\n  }\n\n  state = {\n    index: 0,\n    isSwiping: false,\n    loaded: [this.props.navigation.state.index],\n    transitioningFromIndex: null\n  };\n\n  _renderIcon = ({ focused, route, tintColor }) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarIcon) {\n      return typeof options.tabBarIcon === 'function' ? options.tabBarIcon({ tintColor, focused }) : options.tabBarIcon;\n    }\n\n    return null;\n  };\n\n  _renderTabBar = props => {\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    const tabBarVisible = options.tabBarVisible == null ? true : options.tabBarVisible;\n\n    const {\n      tabBarComponent: TabBarComponent = MaterialTopTabBar,\n      tabBarPosition,\n      tabBarOptions\n    } = this.props;\n\n    if (TabBarComponent === null || !tabBarVisible) {\n      return null;\n    }\n\n    return (\n      /* $FlowFixMe */\n      <TabBarComponent {...tabBarOptions} {...props} tabBarPosition={tabBarPosition} screenProps={this.props.screenProps} navigation={this.props.navigation} getLabelText={this.props.getLabelText} getAccessibilityLabel={this.props.getAccessibilityLabel} getTestID={this.props.getTestID} renderIcon={this._renderIcon} onTabPress={this.props.onTabPress} onTabLongPress={this.props.onTabLongPress} />\n    );\n  };\n\n  _renderPanPager = props => <PagerPan {...props} />;\n\n  _handleAnimationEnd = () => {\n    const { lazy } = this.props;\n\n    if (lazy) {\n      this.setState({\n        transitioningFromIndex: null,\n        isSwiping: false\n      });\n    }\n  };\n\n  _handleSwipeStart = () => {\n    const { navigation, lazy } = this.props;\n\n    if (lazy) {\n      this.setState({\n        isSwiping: true,\n        loaded: [...new Set([...this.state.loaded, Math.max(navigation.state.index - 1, 0), Math.min(navigation.state.index + 1, navigation.state.routes.length - 1)])]\n      });\n    }\n  };\n\n  _handleIndexChange = index => {\n    const { animationEnabled, navigation, onIndexChange, lazy } = this.props;\n\n    if (lazy && animationEnabled) {\n      this.setState({\n        transitioningFromIndex: navigation.state.index || 0\n      });\n    }\n\n    onIndexChange(index);\n  };\n\n  _mustBeVisible = ({ index, focused }) => {\n    const { animationEnabled, navigation } = this.props;\n    const { isSwiping, transitioningFromIndex } = this.state;\n\n    if (isSwiping) {\n      const isSibling = navigation.state.index === index - 1 || navigation.state.index === index + 1;\n\n      if (isSibling) {\n        return true;\n      }\n    }\n\n    // The previous tab should remain visible while transitioning\n    if (animationEnabled && transitioningFromIndex === index) {\n      return true;\n    }\n\n    return focused;\n  };\n\n  _renderScene = ({ route }) => {\n    const { renderScene, descriptors, lazy, optimizationsEnabled } = this.props;\n\n    if (lazy) {\n      const { loaded } = this.state;\n      const { routes } = this.props.navigation.state;\n      const index = routes.findIndex(({ key }) => key === route.key);\n      const { navigation } = descriptors[route.key];\n\n      const mustBeVisible = this._mustBeVisible({\n        index,\n        focused: navigation.isFocused()\n      });\n\n      if (!loaded.includes(index) && !mustBeVisible) {\n        return <View />;\n      }\n\n      if (optimizationsEnabled) {\n        return <ResourceSavingScene isVisible={mustBeVisible}>\n            {renderScene({ route })}\n          </ResourceSavingScene>;\n      }\n    }\n\n    return renderScene({ route });\n  };\n\n  render() {\n    const {\n      navigation,\n      animationEnabled,\n      // eslint-disable-next-line no-unused-vars\n      renderScene,\n      // eslint-disable-next-line no-unused-vars\n      onIndexChange,\n      ...rest\n    } = this.props;\n\n    let renderPager = rest.renderPager;\n\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    let swipeEnabled = options.swipeEnabled == null ? this.props.swipeEnabled : options.swipeEnabled;\n\n    if (typeof swipeEnabled === 'function') {\n      swipeEnabled = swipeEnabled(state);\n    }\n\n    if (animationEnabled === false && swipeEnabled === false) {\n      renderPager = this._renderPanPager;\n    }\n\n    return <TabView {...rest} navigationState={navigation.state} animationEnabled={animationEnabled} swipeEnabled={swipeEnabled} onAnimationEnd={this._handleAnimationEnd} onIndexChange={this._handleIndexChange} onSwipeStart={this._handleSwipeStart} renderPager={renderPager} renderTabBar={this._renderTabBar} renderScene={\n    /* $FlowFixMe */\n    this._renderScene} />;\n  }\n}\n\npolyfill(MaterialTabView);\n\nexport default createTabNavigator(MaterialTabView);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar LoadingScreen = function (_Component) {\n  _inherits(LoadingScreen, _Component);\n\n  var _super = _createSuper(LoadingScreen);\n\n  function LoadingScreen() {\n    var _this;\n\n    _classCallCheck(this, LoadingScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.checkIfLoggedIn = function () {\n      firebase.auth().onAuthStateChanged(function (user) {\n        console.log('AUTH STATE CHANGED CALLED ');\n\n        if (user) {\n          this.props.navigation.navigate('DashboardScreen');\n        } else {\n          this.props.navigation.navigate('LoginScreen');\n        }\n      }.bind(_assertThisInitialized(_this)));\n    };\n\n    return _this;\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkIfLoggedIn();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsx(ActivityIndicator, {\n          size: \"large\"\n        })\n      });\n    }\n  }]);\n\n  return LoadingScreen;\n}(Component);\n\nexport default LoadingScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Dell/Desktop/REACT/secondTest/screens/LoadingScreen.js"],"names":["React","Component","firebase","LoadingScreen","checkIfLoggedIn","auth","onAuthStateChanged","user","console","log","props","navigation","navigate","bind","styles","container","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAGA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,OAAO,2BAAP;;;IACMC,a;;;;;;;;;;;;;;;;UAKJC,e,GAAkB,YAAM;AACtBF,MAAAA,QAAQ,CAACG,IAAT,GAAgBC,kBAAhB,CACE,UAASC,IAAT,EAAe;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;;AACA,YAAIF,IAAJ,EAAU;AACR,eAAKG,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,iBAA/B;AACD,SAFD,MAEO;AACL,eAAKF,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,aAA/B;AACD;AACF,OAPD,CAOEC,IAPF,+BADF;AAUD,K;;;;;;;WAfD,6BAAoB;AAClB,WAAKT,eAAL;AACD;;;WAeD,kBAAS;AACP,aACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEU,MAAM,CAACC,SAApB;AAAA,kBACE,KAAC,iBAAD;AAAmB,UAAA,IAAI,EAAC;AAAxB;AADF,QADF;AAKD;;;;EAxByBd,S;;AA0B5B,eAAeE,aAAf;AAEA,IAAMW,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, ActivityIndicator } from 'react-native';\r\n// import firebase from 'firebase/app';\r\nimport firebase from \"firebase/compat/app\"\r\nimport \"firebase/compat/auth\"\r\nimport \"firebase/compat/firestore\"\r\nclass LoadingScreen extends Component {\r\n  componentDidMount() {\r\n    this.checkIfLoggedIn();\r\n  }\r\n\r\n  checkIfLoggedIn = () => {\r\n    firebase.auth().onAuthStateChanged(\r\n      function(user) {\r\n        console.log('AUTH STATE CHANGED CALLED ')\r\n        if (user) {\r\n          this.props.navigation.navigate('DashboardScreen');\r\n        } else {\r\n          this.props.navigation.navigate('LoginScreen');\r\n        }\r\n      }.bind(this)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ActivityIndicator size=\"large\" />\r\n      </View>\r\n    );\r\n  }\r\n}\r\nexport default LoadingScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}
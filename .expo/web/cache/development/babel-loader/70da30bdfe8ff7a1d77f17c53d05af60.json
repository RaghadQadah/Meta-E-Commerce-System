{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar LoadingScreen = function (_React$Component) {\n  _inherits(LoadingScreen, _React$Component);\n\n  var _super = _createSuper(LoadingScreen);\n\n  function LoadingScreen() {\n    _classCallCheck(this, LoadingScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this.props.navigation.navigate('App');\n        } else {\n          _this.props.navigation.navigate('SignUp');\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsx(ActivityIndicator, {\n          size: \"large\"\n        })\n      });\n    }\n  }]);\n\n  return LoadingScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default LoadingScreen;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/NewReact/E-COM/Meta-E-Commerce-System-with-Payment-and-Delivery/screens/LoadingScreen.js"],"names":["React","firebase","LoadingScreen","auth","onAuthStateChanged","user","props","navigation","navigate","styles","container","Component","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,OAAO,2BAAP;;;IAEMC,a;;;;;;;;;;;;;WACF,6BAAoB;AAAA;;AAChBD,MAAAA,QAAQ,CAACE,IAAT,GAAgBC,kBAAhB,CAAmC,UAAAC,IAAI,EAAI;AACvC,YAAIA,IAAJ,EAAU;AACN,UAAA,KAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,KAA/B;AACH,SAFD,MAEO;AACH,UAAA,KAAI,CAACF,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B;AACH;AACJ,OAND;AAOH;;;WACD,kBAAS;AACL,aACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,kBACI,KAAC,iBAAD;AAAmB,UAAA,IAAI,EAAC;AAAxB;AADJ,QADJ;AAKH;;;;EAhBuBV,KAAK,CAACW,S;;AAkBlC,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE;AAHT;AADkB,CAAlB,CAAf;AAOA,eAAed,aAAf","sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet, ActivityIndicator } from 'react-native';\r\n\r\nimport firebase from \"firebase/compat/app\"\r\nimport \"firebase/compat/auth\"\r\nimport \"firebase/compat/firestore\"\r\n\r\nclass LoadingScreen extends React.Component {\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.props.navigation.navigate('App');\r\n            } else {\r\n                this.props.navigation.navigate('SignUp');\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <ActivityIndicator size=\"large\" />\r\n            </View>\r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\nexport default LoadingScreen;"]},"metadata":{},"sourceType":"module"}
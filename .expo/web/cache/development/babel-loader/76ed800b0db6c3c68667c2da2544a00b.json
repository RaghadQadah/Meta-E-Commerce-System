{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport * as Facebook from 'expo-facebook';\nimport * as Google from 'expo-google-app-auth';\nimport * as Segment from 'expo-analytics-segment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUpScreen = function (_React$Component) {\n  _inherits(SignUpScreen, _React$Component);\n\n  var _super = _createSuper(SignUpScreen);\n\n  function SignUpScreen() {\n    var _this;\n\n    _classCallCheck(this, SignUpScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      errorMessage: '',\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(SignUpScreen, [{\n    key: \"onLoginSuccess\",\n    value: function onLoginSuccess() {\n      this.props.navigation.navigate('App');\n    }\n  }, {\n    key: \"onLoginFailure\",\n    value: function onLoginFailure(errorMessage) {\n      this.setState({\n        error: errorMessage,\n        loading: false\n      });\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      if (this.state.loading) {\n        return _jsx(View, {\n          children: _jsx(ActivityIndicator, {\n            size: 'large'\n          })\n        });\n      }\n    }\n  }, {\n    key: \"signInWithEmail\",\n    value: function signInWithEmail() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function signInWithEmail$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(this.onLoginSuccess.bind(this)).catch(function (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n\n                if (errorCode == 'auth/weak-password') {\n                  _this2.onLoginFailure.bind(_this2)('Weak Password!');\n                } else {\n                  _this2.onLoginFailure.bind(_this2)(errorMessage);\n                }\n              }));\n\n            case 2:\n              Segment.identify(this.state.email);\n              Segment.trackWithProperties(\"User SignIn\", {\n                accountType: \"CustomEmailAuth\",\n                email: this.state.email\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsx(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          Keyboard.dismiss();\n        },\n        children: _jsx(SafeAreaView, {\n          style: {\n            flex: 1\n          },\n          children: _jsxs(KeyboardAvoidingView, {\n            style: styles.container,\n            behavior: \"padding\",\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 32,\n                fontWeight: '700',\n                color: 'gray'\n              },\n              children: \"Sign Up\"\n            }), _jsxs(View, {\n              style: styles.form,\n              children: [_jsx(TextInput, {\n                style: styles.input,\n                placeholder: \"Name\",\n                placeholderTextColor: \"#B1B1B1\",\n                returnKeyType: \"next\",\n                textContentType: \"name\",\n                value: this.state.displayName,\n                onChangeText: function onChangeText(displayName) {\n                  return _this3.setState({\n                    displayName: displayName\n                  });\n                }\n              }), _jsx(TextInput, {\n                style: styles.input,\n                placeholder: \"Email\",\n                placeholderTextColor: \"#B1B1B1\",\n                returnKeyType: \"next\",\n                keyboardType: \"email-address\",\n                textContentType: \"emailAddress\",\n                value: this.state.email,\n                onChangeText: function onChangeText(email) {\n                  return _this3.setState({\n                    email: email\n                  });\n                }\n              }), _jsx(TextInput, {\n                style: styles.input,\n                placeholder: \"Password\",\n                placeholderTextColor: \"#B1B1B1\",\n                returnKeyType: \"done\",\n                textContentType: \"newPassword\",\n                secureTextEntry: true,\n                value: this.state.password,\n                onChangeText: function onChangeText(password) {\n                  return _this3.setState({\n                    password: password\n                  });\n                }\n              })]\n            }), this.renderLoading(), _jsx(Text, {\n              style: {\n                fontSize: 18,\n                textAlign: 'center',\n                color: 'red',\n                width: '80%'\n              },\n              children: this.state.error\n            }), _jsx(TouchableOpacity, {\n              style: {\n                width: '86%',\n                marginTop: 10\n              },\n              onPress: function onPress() {\n                return _this3.signInWithEmail();\n              },\n              children: _jsx(Text, {\n                children: \"Sign Up\"\n              })\n            }), _jsx(View, {\n              style: {\n                marginTop: 10\n              },\n              children: _jsx(Text, {\n                style: {\n                  fontWeight: '200',\n                  fontSize: 17,\n                  textAlign: 'center'\n                },\n                onPress: function onPress() {\n                  _this3.props.navigation.navigate('SignIn');\n                },\n                children: \"Already have an account?\"\n              })\n            })]\n          })\n        })\n      });\n    }\n  }]);\n\n  return SignUpScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '86%',\n    marginTop: 15\n  },\n  logo: {\n    marginTop: 20\n  },\n  input: {\n    fontSize: 20,\n    borderColor: '#707070',\n    borderBottomWidth: 1,\n    paddingBottom: 1.5,\n    marginTop: 25.5\n  },\n  button: {\n    backgroundColor: '#3A559F',\n    height: 44,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 22\n  },\n  googleButton: {\n    backgroundColor: '#FFFFFF',\n    height: 44,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 22,\n    borderWidth: 1,\n    borderColor: '#707070'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/REACT/ThirdTest/secondTest/screens/SignUpScreen.js"],"names":["React","firebase","Facebook","Google","Segment","SignUpScreen","state","displayName","email","password","errorMessage","loading","props","navigation","navigate","setState","error","auth","createUserWithEmailAndPassword","then","onLoginSuccess","bind","catch","errorCode","code","message","onLoginFailure","identify","trackWithProperties","accountType","Keyboard","dismiss","flex","styles","container","fontSize","fontWeight","color","form","input","renderLoading","textAlign","width","marginTop","signInWithEmail","Component","StyleSheet","create","flexDirection","alignItems","logo","borderColor","borderBottomWidth","paddingBottom","button","backgroundColor","height","justifyContent","borderRadius","googleButton","borderWidth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  ActivityIndicator,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  Platform\r\n} from 'react-native';\r\n\r\nimport firebase from \"firebase/compat/app\"\r\nimport \"firebase/compat/auth\"\r\nimport \"firebase/compat/firestore\"\r\n\r\nimport * as Facebook from 'expo-facebook'\r\nimport * as Google from 'expo-google-app-auth';\r\nimport * as Segment from 'expo-analytics-segment';\r\n\r\n\r\n\r\nclass SignUpScreen extends React.Component {\r\n  state = { displayName: '', email: '', password: '', errorMessage: '', loading: false };\r\n  onLoginSuccess() {\r\n    this.props.navigation.navigate('App');\r\n  }\r\n\r\n\r\n  onLoginFailure(errorMessage) {\r\n    this.setState({ error: errorMessage, loading: false });\r\n  }\r\n  renderLoading() {\r\n   \r\n    if (this.state.loading) {\r\n      return (\r\n        <View>\r\n          <ActivityIndicator size={'large'} />\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n  async signInWithEmail() {\r\n    await firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(this.onLoginSuccess.bind(this))\r\n      .catch(error => {\r\n          let errorCode = error.code;\r\n          let errorMessage = error.message;\r\n          if (errorCode == 'auth/weak-password') {\r\n              this.onLoginFailure.bind(this)('Weak Password!');\r\n          } else {\r\n              this.onLoginFailure.bind(this)(errorMessage);\r\n          }\r\n      });\r\n      Segment.identify(this.state.email);\r\n      Segment.trackWithProperties(\"User SignIn\", {\r\n        accountType: \"CustomEmailAuth\",\r\n        email:this.state.email\r\n      });\r\n   \r\n  }\r\n  // async signInWithFacebook() {\r\n  //   try {\r\n  //     const { type, token } = await Facebook.logInWithReadPermissionsAsync('337956678166688', {\r\n  //       permissions: ['public_profile'],\r\n  //     });\r\n  //     if (type === 'success') {\r\n  //       await firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\r\n  //       const credential = firebase.auth.FacebookAuthProvider.credential(token);\r\n  //       const facebookProfileData = await firebase.auth().signInWithCredential(credential);\r\n  //       this.onLoginSuccess.bind(this);\r\n  //     }\r\n  //   } catch ({ message }) {\r\n  //     alert(`Facebook Login Error: ${message}`);\r\n  //   }\r\n  // }\r\n\r\n  //  isUserEqual = (googleUser, firebaseUser) => {\r\n  //   if (firebaseUser) {\r\n  //     var providerData = firebaseUser.providerData;\r\n  //     for (var i = 0; i < providerData.length; i++) {\r\n  //       if (providerData[i].providerId === firebase.auth.GoogleAuthProvider.PROVIDER_ID &&\r\n  //           providerData[i].uid === googleUser.getBasicProfile().getId()) {\r\n  //         // We don't need to reauth the Firebase connection.\r\n  //         return true;\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return false;\r\n  // }\r\n\r\n  //  onSignIn = (googleUser)  => {\r\n  //   console.log('Google Auth Response', googleUser);\r\n  //   // We need to register an Observer on Firebase Auth to make sure auth is initialized.\r\n  //   var unsubscribe = firebase.auth().onAuthStateChanged(function(firebaseUser) {\r\n  //     unsubscribe();\r\n  //     // Check if we are already signed-in Firebase with the correct user.\r\n  //     if (!this.isUserEqual(googleUser, firebaseUser)) {\r\n  //       // Build Firebase credential with the Google ID token.\r\n  //       var credential = firebase.auth.GoogleAuthProvider.credential(\r\n  //           googleUser.idToken,\r\n  //           googleUser.accessToken);\r\n  //       // Sign in with credential from the Google user.\r\n  //       firebase.auth().signInAndRetrieveDataWithCredential(credential).then(function(result){\r\n            \r\n  //           console.log(\"user sign in\");\r\n  //       firebase\r\n  //       .database()\r\n  //       .ref('/users'+result.user.uid)\r\n  //       .set({\r\n  //           gmail:result.user.email,\r\n  //           profile_picture:result.additionalUserInfo.profile.profile_picture,\r\n  //           locale:result.additionalUserInfo.profile_picture.locale,\r\n  //           first_name:result.additionalUserInfo.given_name,\r\n  //           last_name:result.additionalUserInfo.first_name\r\n  //       })\r\n  //       .then(function(snapshot){\r\n\r\n  //       });\r\n  //       }).catch(function(error) {\r\n  //         // Handle Errors here.\r\n  //         var errorCode = error.code;\r\n  //         var errorMessage = error.message;\r\n  //         // The email of the user's account used.\r\n  //         var email = error.email;\r\n  //         // The firebase.auth.AuthCredential type that was used.\r\n  //         var credential = error.credential;\r\n  //         // ...\r\n  //       });\r\n  //     } else {\r\n  //       console.log('User already signed-in Firebase.');\r\n  //     }\r\n  //   }.bind(this));\r\n  // }\r\n  // signInWithGoogleAsync = async () => {\r\n  //   try {\r\n  //     const result = await Google.logInAsync({\r\n  //       // androidClientId: androidClientId,\r\n  //       // iosClientId: IOSClientId,\r\n  //       behavior: 'web',\r\n  //       iosClientId: '731109863491-77g059lagdgbkmpoph4497904en22u2o.apps.googleusercontent.com', //enter ios client id\r\n  //       scopes: ['profile', 'email']\r\n  //     });\r\n\r\n  //     if (result.type === 'success') {\r\n  //       this.onSignIn(result);\r\n  //       return result.accessToken;\r\n  //     } else {\r\n  //       return { cancelled: true };\r\n  //     }\r\n  //   } catch (e) {\r\n  //     return { error: true };\r\n  //   }\r\n  // };\r\n  render() {\r\n    return (\r\n      <TouchableWithoutFeedback\r\n        onPress={() => {\r\n          Keyboard.dismiss();\r\n        }}\r\n      >\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n          <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\r\n            <Text style={{ fontSize: 32, fontWeight: '700', color: 'gray' }}>\r\n              Sign Up\r\n            </Text>\r\n            <View style={styles.form}>\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Name\"\r\n                placeholderTextColor=\"#B1B1B1\"\r\n                returnKeyType=\"next\"\r\n                textContentType=\"name\"\r\n                value={this.state.displayName}\r\n                onChangeText={displayName => this.setState({ displayName })}\r\n              />\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Email\"\r\n                placeholderTextColor=\"#B1B1B1\"\r\n                returnKeyType=\"next\"\r\n                keyboardType=\"email-address\"\r\n                textContentType=\"emailAddress\"\r\n                value={this.state.email}\r\n                onChangeText={email => this.setState({ email })}\r\n              />\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Password\"\r\n                placeholderTextColor=\"#B1B1B1\"\r\n                returnKeyType=\"done\"\r\n                textContentType=\"newPassword\"\r\n                secureTextEntry={true}\r\n                value={this.state.password}\r\n                onChangeText={password => this.setState({ password })}\r\n              />\r\n            </View>\r\n            {this.renderLoading()}\r\n            <Text\r\n              style={{\r\n                fontSize: 18,\r\n                textAlign: 'center',\r\n                color: 'red',\r\n                width: '80%'\r\n              }}\r\n            >\r\n              {this.state.error}\r\n            </Text>\r\n            <TouchableOpacity\r\n              style={{ width: '86%', marginTop: 10 }}\r\n              onPress={() => this.signInWithEmail()}\r\n            >\r\n                <Text>Sign Up</Text>\r\n            </TouchableOpacity>\r\n            {/* <TouchableOpacity\r\n              style={{ width: '86%', marginTop: 10 }}\r\n              onPress={() => this.signInWithFacebook()}>\r\n              <View style={styles.button}>\r\n                <Text\r\n                  style={{\r\n                    letterSpacing: 0.5,\r\n                    fontSize: 16,\r\n                    color: '#FFFFFF'\r\n                  }}\r\n                >\r\n                  Continue with Facebook\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity \r\n              style={{ width: '86%', marginTop: 10 }}\r\n              onPress={() => this.signInWithGoogleAsync()}>\r\n              <View style={styles.googleButton}>\r\n                <Text\r\n                  style={{\r\n                    letterSpacing: 0.5,\r\n                    fontSize: 16,\r\n                    color: '#707070'\r\n                  }}\r\n                >\r\n                  Continue with Google\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity> */}\r\n            <View style={{ marginTop: 10 }}>\r\n              <Text\r\n                style={{ fontWeight: '200', fontSize: 17, textAlign: 'center' }}\r\n                onPress={() => {\r\n                  this.props.navigation.navigate('SignIn');\r\n                }}\r\n              >\r\n                Already have an account?\r\n              </Text>\r\n            </View>\r\n          </KeyboardAvoidingView>\r\n        </SafeAreaView>\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '86%',\r\n    marginTop: 15\r\n  },\r\n  logo: {\r\n    marginTop: 20\r\n  },\r\n  input: {\r\n    fontSize: 20,\r\n    borderColor: '#707070',\r\n    borderBottomWidth: 1,\r\n    paddingBottom: 1.5,\r\n    marginTop: 25.5\r\n  },\r\n  button: {\r\n    backgroundColor: '#3A559F',\r\n    height: 44,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 22\r\n  },\r\n  googleButton: {\r\n    backgroundColor: '#FFFFFF',\r\n    height: 44,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 22,\r\n    borderWidth: 1,\r\n    borderColor: '#707070'\r\n  }\r\n});\r\nexport default SignUpScreen;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"isVisible\"],\n    _excluded2 = [\"isVisible\", \"children\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Screen, screensEnabled } from 'react-native-screens';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar FAR_FAR_AWAY = 3000;\n\nvar ResourceSavingScene = function (_React$Component) {\n  _inherits(ResourceSavingScene, _React$Component);\n\n  var _super = _createSuper(ResourceSavingScene);\n\n  function ResourceSavingScene() {\n    _classCallCheck(this, ResourceSavingScene);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ResourceSavingScene, [{\n    key: \"render\",\n    value: function render() {\n      if (screensEnabled && screensEnabled()) {\n        var _this$props = this.props,\n            _isVisible = _this$props.isVisible,\n            _rest = _objectWithoutProperties(_this$props, _excluded);\n\n        return _jsx(Screen, _objectSpread({\n          active: _isVisible ? 1 : 0\n        }, _rest));\n      }\n\n      var _this$props2 = this.props,\n          isVisible = _this$props2.isVisible,\n          children = _this$props2.children,\n          style = _this$props2.style,\n          rest = _objectWithoutProperties(_this$props2, _excluded2);\n\n      return _jsx(View, _objectSpread(_objectSpread({\n        style: [styles.container, style, {\n          opacity: isVisible ? 1 : 0\n        }],\n        collapsable: false,\n        removeClippedSubviews: Platform.OS === 'ios' ? !isVisible : true,\n        pointerEvents: isVisible ? 'auto' : 'none'\n      }, rest), {}, {\n        children: _jsx(View, {\n          style: isVisible ? styles.attached : styles.detached,\n          children: children\n        })\n      }));\n    }\n  }]);\n\n  return ResourceSavingScene;\n}(React.Component);\n\nexport { ResourceSavingScene as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  attached: {\n    flex: 1\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});","map":{"version":3,"sources":["C:/Users/Dell/Desktop/REACT/secondTest/node_modules/react-navigation-tabs/dist/views/ResourceSavingScene.js"],"names":["React","Screen","screensEnabled","FAR_FAR_AWAY","ResourceSavingScene","props","isVisible","rest","children","style","styles","container","opacity","Platform","OS","attached","detached","Component","StyleSheet","create","flex","overflow","top"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAIA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,sBAAvC;;AAEA,IAAMC,YAAY,GAAG,IAArB;;IAEqBC,mB;;;;;;;;;;;;;WACnB,kBAAS;AACP,UAAIF,cAAc,IAAIA,cAAc,EAApC,EAAwC;AACtC,0BAA+B,KAAKG,KAApC;AAAA,YAAQC,UAAR,eAAQA,SAAR;AAAA,YAAsBC,KAAtB;;AACA,eAAO,KAAC,MAAD;AAAQ,UAAA,MAAM,EAAED,UAAS,GAAG,CAAH,GAAO;AAAhC,WAAuCC,KAAvC,EAAP;AACD;;AACD,yBAAgD,KAAKF,KAArD;AAAA,UAAQC,SAAR,gBAAQA,SAAR;AAAA,UAAmBE,QAAnB,gBAAmBA,QAAnB;AAAA,UAA6BC,KAA7B,gBAA6BA,KAA7B;AAAA,UAAuCF,IAAvC;;AAEA,aAAO,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACG,MAAM,CAACC,SAAR,EAAmBF,KAAnB,EAA0B;AAAEG,UAAAA,OAAO,EAAEN,SAAS,GAAG,CAAH,GAAO;AAA3B,SAA1B,CAAb;AAAwE,QAAA,WAAW,EAAE,KAArF;AAA4F,QAAA,qBAAqB,EAGxHO,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAACR,SAAzB,GAAqC,IAH9B;AAGoC,QAAA,aAAa,EAAEA,SAAS,GAAG,MAAH,GAAY;AAHxE,SAGoFC,IAHpF;AAAA,kBAIH,KAAC,IAAD;AAAM,UAAA,KAAK,EAAED,SAAS,GAAGI,MAAM,CAACK,QAAV,GAAqBL,MAAM,CAACM,QAAlD;AAAA,oBACGR;AADH;AAJG,SAAP;AAQD;;;;EAhB8CR,KAAK,CAACiB,S;;SAAlCb,mB;AAmBrB,IAAMM,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADoB;AAK/BN,EAAAA,QAAQ,EAAE;AACRK,IAAAA,IAAI,EAAE;AADE,GALqB;AAQ/BJ,EAAAA,QAAQ,EAAE;AACRI,IAAAA,IAAI,EAAE,CADE;AAERE,IAAAA,GAAG,EAAEnB;AAFG;AARqB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\n\n// eslint-disable-next-line import/no-unresolved\nimport { Screen, screensEnabled } from 'react-native-screens';\n\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\n\nexport default class ResourceSavingScene extends React.Component {\n  render() {\n    if (screensEnabled && screensEnabled()) {\n      const { isVisible, ...rest } = this.props;\n      return <Screen active={isVisible ? 1 : 0} {...rest} />;\n    }\n    const { isVisible, children, style, ...rest } = this.props;\n\n    return <View style={[styles.container, style, { opacity: isVisible ? 1 : 0 }]} collapsable={false} removeClippedSubviews={\n    // On iOS, set removeClippedSubviews to true only when not focused\n    // This is an workaround for a bug where the clipped view never re-appears\n    Platform.OS === 'ios' ? !isVisible : true} pointerEvents={isVisible ? 'auto' : 'none'} {...rest}>\n        <View style={isVisible ? styles.attached : styles.detached}>\n          {children}\n        </View>\n      </View>;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  attached: {\n    flex: 1\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationActions } from '@react-navigation/core';\nimport invariant from \"../utils/invariant\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar DrawerSidebar = function (_React$PureComponent) {\n  _inherits(DrawerSidebar, _React$PureComponent);\n\n  var _super = _createSuper(DrawerSidebar);\n\n  function DrawerSidebar() {\n    var _this;\n\n    _classCallCheck(this, DrawerSidebar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._getScreenOptions = function (routeKey) {\n      var descriptor = _this.props.descriptors[routeKey];\n      invariant(descriptor.options, 'Cannot access screen descriptor options from drawer sidebar');\n      return descriptor.options;\n    };\n\n    _this._getLabel = function (_ref) {\n      var focused = _ref.focused,\n          tintColor = _ref.tintColor,\n          route = _ref.route;\n\n      var _this$_getScreenOptio = _this._getScreenOptions(route.key),\n          drawerLabel = _this$_getScreenOptio.drawerLabel,\n          title = _this$_getScreenOptio.title;\n\n      if (drawerLabel) {\n        return typeof drawerLabel === 'function' ? drawerLabel({\n          tintColor: tintColor,\n          focused: focused\n        }) : drawerLabel;\n      }\n\n      if (typeof title === 'string') {\n        return title;\n      }\n\n      return route.routeName;\n    };\n\n    _this._renderIcon = function (_ref2) {\n      var focused = _ref2.focused,\n          tintColor = _ref2.tintColor,\n          route = _ref2.route;\n\n      var _this$_getScreenOptio2 = _this._getScreenOptions(route.key),\n          drawerIcon = _this$_getScreenOptio2.drawerIcon;\n\n      if (drawerIcon) {\n        return typeof drawerIcon === 'function' ? drawerIcon({\n          tintColor: tintColor,\n          focused: focused\n        }) : drawerIcon;\n      }\n\n      return null;\n    };\n\n    _this._onItemPress = function (_ref3) {\n      var route = _ref3.route,\n          focused = _ref3.focused;\n\n      if (focused) {\n        _this.props.navigation.closeDrawer();\n      } else {\n        _this.props.navigation.dispatch(NavigationActions.navigate({\n          routeName: route.routeName\n        }));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(DrawerSidebar, [{\n    key: \"render\",\n    value: function render() {\n      var ContentComponent = this.props.contentComponent;\n\n      if (!ContentComponent) {\n        return null;\n      }\n\n      var state = this.props.navigation.state;\n      invariant(typeof state.index === 'number', 'should be set');\n      return _jsx(View, {\n        style: [styles.container, this.props.style],\n        children: _jsx(ContentComponent, _objectSpread(_objectSpread({}, this.props.contentOptions), {}, {\n          navigation: this.props.navigation,\n          descriptors: this.props.descriptors,\n          items: state.routes,\n          activeItemKey: state.routes[state.index] ? state.routes[state.index].key : null,\n          screenProps: this.props.screenProps,\n          getLabel: this._getLabel,\n          renderIcon: this._renderIcon,\n          onItemPress: this._onItemPress,\n          drawerPosition: this.props.drawerPosition\n        }))\n      });\n    }\n  }]);\n\n  return DrawerSidebar;\n}(React.PureComponent);\n\nexport default DrawerSidebar;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Dell/Desktop/REACT/secondTest/node_modules/react-navigation-drawer/dist/views/DrawerSidebar.js"],"names":["React","NavigationActions","invariant","DrawerSidebar","_getScreenOptions","routeKey","descriptor","props","descriptors","options","_getLabel","focused","tintColor","route","key","drawerLabel","title","routeName","_renderIcon","drawerIcon","_onItemPress","navigation","closeDrawer","dispatch","navigate","ContentComponent","contentComponent","state","index","styles","container","style","contentOptions","routes","screenProps","drawerPosition","PureComponent","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { NavigationActions } from '@react-navigation/core';\nimport invariant from '../utils/invariant';\n\n/**\n * Component that renders the sidebar screen of the drawer.\n */\n\nclass DrawerSidebar extends React.PureComponent {\n  _getScreenOptions = routeKey => {\n    const descriptor = this.props.descriptors[routeKey];\n    invariant(descriptor.options, 'Cannot access screen descriptor options from drawer sidebar');\n    return descriptor.options;\n  };\n\n  _getLabel = ({ focused, tintColor, route }) => {\n    const { drawerLabel, title } = this._getScreenOptions(route.key);\n    if (drawerLabel) {\n      return typeof drawerLabel === 'function' ? drawerLabel({ tintColor, focused }) : drawerLabel;\n    }\n\n    if (typeof title === 'string') {\n      return title;\n    }\n\n    return route.routeName;\n  };\n\n  _renderIcon = ({ focused, tintColor, route }) => {\n    const { drawerIcon } = this._getScreenOptions(route.key);\n    if (drawerIcon) {\n      return typeof drawerIcon === 'function' ? drawerIcon({ tintColor, focused }) : drawerIcon;\n    }\n    return null;\n  };\n\n  _onItemPress = ({ route, focused }) => {\n    if (focused) {\n      this.props.navigation.closeDrawer();\n    } else {\n      this.props.navigation.dispatch(NavigationActions.navigate({ routeName: route.routeName }));\n    }\n  };\n\n  render() {\n    const ContentComponent = this.props.contentComponent;\n    if (!ContentComponent) {\n      return null;\n    }\n    const { state } = this.props.navigation;\n    invariant(typeof state.index === 'number', 'should be set');\n    return <View style={[styles.container, this.props.style]}>\n        <ContentComponent {...this.props.contentOptions} navigation={this.props.navigation} descriptors={this.props.descriptors} items={state.routes} activeItemKey={state.routes[state.index] ? state.routes[state.index].key : null} screenProps={this.props.screenProps} getLabel={this._getLabel} renderIcon={this._renderIcon} onItemPress={this._onItemPress} drawerPosition={this.props.drawerPosition} />\n      </View>;\n  }\n}\n\nexport default DrawerSidebar;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});"]},"metadata":{},"sourceType":"module"}